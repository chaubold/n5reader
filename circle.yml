## Customize the test machine
machine:
  environment:
    CONDA_ROOT: /home/ubuntu/miniconda
    TEST_ENV_NAME: test-env
    TEST_ENV_PREFIX: /home/ubuntu/miniconda/envs/test-env
    PATH: ${TEST_ENV_PREFIX}/bin:${CONDA_ROOT}/bin:${PATH}
    PYTHONPATH: ${TEST_ENV_PREFIX}/lib/python3.6/site-packages/
  
## Customize dependencies
dependencies:
  cache_directories:
    - /home/ubuntu/miniconda

  override:
    # Download/install conda (if not already cached)
    - >
          - >
      if [[ ! -d ${CONDA_ROOT} ]]; then
          echo "Installing Miniconda...";
          wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh &&
          bash Miniconda3-latest-Linux-x86_64.sh -b -p ${CONDA_ROOT};
      else
          echo "Using cached Miniconda install";
      fi

    - >
      if [ ! -d ${TEST_ENV_PREFIX} ]; then
          conda create -y -n ${TEST_ENV_NAME} -c ilastik-forge -c conda-forge python=3.6 numpy=1.12 ilastik-dependencies-no-solvers;
      else
          conda install -y -n ${TEST_ENV_NAME} -c ilastik-forge -c conda-forge python=3.6 numpy=1.12 ilastik-dependencies-no-solvers;
      fi

    # ---------------------------------------------------------------------------
    # ONLY EDIT THIS PART OF THE CONFIGURATION (unless you know what you're doing...)
    # installation of dependencies: 
    #  * make sure the statements can execute without user intervention (e.g. by passing -y)
    #  * separate the statements with semicolons
    #  * leave the "source activate" line as it activates the conda environment prior to installing stuff.
    - >
      source /home/ubuntu/miniconda/bin/activate ${TEST_ENV_NAME};
      conda install pytest

    # leave the rest untouched!
    # ---------------------------------------------------------------------------

## Customize test commands
test:
  override:
    - >
      source /home/ubuntu/miniconda/bin/activate ${TEST_ENV_NAME};
      py.test tests
